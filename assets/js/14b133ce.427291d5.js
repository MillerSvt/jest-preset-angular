"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["7005"],{3806:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>o,default:()=>g,toc:()=>c,metadata:()=>s,assets:()=>a,contentTitle:()=>l});var s=JSON.parse('{"id":"guides/angular-ivy","title":"Angular Ivy","description":"This guide is now DEPRECATED and will be removed in the next major release together with the below APIs.","source":"@site/docs/guides/angular-ivy.md","sourceDirName":"guides","slug":"/guides/angular-ivy","permalink":"/jest-preset-angular/docs/next/guides/angular-ivy","draft":false,"unlisted":false,"editUrl":"https://github.com/thymikee/jest-preset-angular/edit/main/website/docs/guides/angular-ivy.md","tags":[],"version":"current","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1749281804000,"frontMatter":{"id":"angular-ivy","title":"Angular Ivy"},"sidebar":"docs","previous":{"title":"TestBed environment","permalink":"/jest-preset-angular/docs/next/getting-started/testbed-environment"},"next":{"title":"Angular >=13","permalink":"/jest-preset-angular/docs/next/guides/angular-13+"}}'),i=n(5893),r=n(65);let o={id:"angular-ivy",title:"Angular Ivy"},l=void 0,a={},c=[{value:"Control ngcc processing",id:"control-ngcc-processing",level:2}];function d(e){let t={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.admonition,{title:"DEPRECATED",type:"warning",children:(0,i.jsxs)(t.p,{children:["This guide is now ",(0,i.jsx)(t.strong,{children:"DEPRECATED"})," and will be removed in the next major release together with the below APIs."]})}),"\n",(0,i.jsxs)(t.p,{children:["Starting from ",(0,i.jsx)(t.strong,{children:"v9.0.0+"}),", ",(0,i.jsx)(t.code,{children:"jest-preset-angular"})," is fully compatible with Angular Ivy. To make sure that Jest uses the\nAngular Ivy, you must run ",(0,i.jsx)(t.code,{children:"ngcc"})," before running tests. ",(0,i.jsx)(t.code,{children:"ngcc"})," will transform all Angular-format packages to be compatible\nwith Ivy compiler."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"jest-preset-angular"})," also provides a Jest global setup file to help you to run ",(0,i.jsx)(t.code,{children:"ngcc"})," with Jest. Add to the following section:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"to your root Jest config"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nexport default {\n  //...\n  globalSetup: 'jest-preset-angular/global-setup',\n} satisfies Config;\n"})}),"\n",(0,i.jsx)(t.h2,{id:"control-ngcc-processing",children:"Control ngcc processing"}),"\n",(0,i.jsxs)(t.p,{children:["Since ",(0,i.jsx)(t.strong,{children:"v12.0.0"}),", ",(0,i.jsx)(t.code,{children:"jest-preset-angular"})," provide a possibility to skip ",(0,i.jsx)(t.code,{children:"ngcc"})," via ",(0,i.jsx)(t.code,{children:"globalThis"})," by doing the following"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nglobalThis.ngJest = {\n  skipNgcc: true,\n  tsconfig: 'tsconfig.spec.json', // this is the project root tsconfig\n};\n\nconst jestConfig: Config = {\n  //...\n  globalSetup: 'jest-preset-angular/global-setup',\n};\n\nexport default jestConfig;\n"})})]})}function g(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65:function(e,t,n){n.d(t,{Z:()=>l,a:()=>o});var s=n(7294);let i={},r=s.createContext(i);function o(e){let t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);